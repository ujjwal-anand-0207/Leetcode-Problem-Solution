Leetcode 189 Rotate Array

You have to rotate elements of array k times

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

approach 1:
  create a new array and save elements in rotated manner
  void rotate(vector<int>& nums, int k) {
        int n=nums.size();
        vector<int>t(n);
        for(int i=0;i<n;++i)
        {
            t[(i+k)%n]=nums[i];
        }
         nums=t;   
            
    }
    
 approach 2: O(1)space complexity
    step 1: rotate the  whole array
    step 2: rotate first k elements
    step 3: rotate last n-k elements
    
    void rotate(vector<int>& A, int k) {
        const int n = A.size();
        k = k % n;
        std::reverse(A.begin(), A.end());
        std:reverse(A.begin(), A.begin() + k);
        std::reverse(A.begin() + k, A.end());
    }
